0*** Tutorial code
1*** explanation
2*** build CHAT BOX GPT
3*** basic instruction to build CHAT BOX GPT with OPEN A.I



0*** Tutorial code

1*** EXPLANATION

1/ There are a few other ways to train a chatbot without using OpenAI. You can get an API key from them <1@,1***>

2/ Since OpenAI is not available in your country, you cannot get an API key from them. There are a few other options available to you. <2@,1***>

3/ openai.Completion.create() <3@,1***>

4/ text-davinci-003 <4@,1***>

5/ "role": "system", "content": "You are a chatbot that helps with hotel booking and weather queries." <5@,1***>

6/ temperature & max_tokens <6@,1***>

7/ the 'temperature' parameter for openai.Completion.create(). how much temperature is supposed to be high and low ? <7@,1***>

8/ Meaning of query in programming ? <8@,1***>

9/ If OpenAI is not available in your country, there are a number of other open source AI APIs that you can use <9@,1***>

10/ Numpy <10@,1***>

11/ brief explanation of Building a.i chatbox by using Tensorflow <11@,1***>

12/ tensorflow.keras.preprocessing.text & tensorflow.keras.preprocessing.sequence <12@,1***>

13/ tokenizer = Tokenizer()
tokenizer.fit_on_texts(training_data)

total_words = len(tokenizer.word_index) + 1
input_sequences = tokenizer.texts_to_sequences(training_data) <13@,1***>

14/ total_words = len(tokenizer.word_index) + 1 <14@,1***>

15/ the reserved index 0. what does that mean ? <15@,1***>

16/ step 4 explanation <16@,1***>

17/ max_sequence_len = max([len(x) for x in input_sequences])
input_sequences = np.array(pad_sequences(input_sequences, maxlen=max_sequence_len, padding='pre'))

xs = input_sequences[:, :-1]
labels = input_sequences[:, -1]

ys = tf.keras.utils.to_categorical(labels, num_classes=total_words) <17@,1***>

18/ what kind of machine learning and neural learning in this code <18@,1***>

19/ one-hot encode vector <19@,1***>

20/ np.array <20@,1***>

21/ LSTM (Long Short-Term Memory) <21@,1***>

22/ model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Embedding(total_words, 100, input_length=max_sequence_len-1))
model.add(tf.keras.layers.LSTM(150))
model.add(tf.keras.layers.Dense(total_words, activation='softmax')) <22@,1***>

23/ The dimension of the embedding vectors. why does it has to be 100 ? <23@,1***>

24/ why do we need embedding layer, LSTM layer, dense layer for this code. what happend if we dont use them ? <24@,1***>

25/ input_length=max_sequence_len-1 <25@,1***>

26/ text to sequences & pad sequences of tensorflow <26@,1***>

27/ when you said the 'model'. what exactly do you mention about ? is that the preprocessing formatted data ? <27@,1***>

28/ how many kind of neural techs are there in tensorflow framework ? <28@,1***>

29/ how about machine learning tech does tensorflow has ? <29@,1***>

30/ Hyperparameters <30@,1***>

31/ model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(xs, ys, epochs=100, verbose=1) <31@,1***>

32/ what is epoch <32@,1***>

33/ Hyperparameters in computer programming <33@,1***>

34/ model.add(tf.keras.layers.LSTM(150)) <34@,1***>

35/ what if i set it too high or too low ? <35@,1***>

36/ model.add(tf.keras.layers.Dense(total_words, activation='softmax')) <36@,1***>

37/ verbose=1. what if i set verbosity level to different numbers ? <37@,1***>

38/ what happend if i dont use verbosity level ? <38@,1***>

39/ probability distribution <39@,1***>

40/ model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) <40@,1***>


2*** build CHAT BOX GPT

1/ Build CHAT BOX GPT with OPEN A.I (APPLIED CODE) <1@,2***>

2/ How to use the ChatGPT API with Python <2@,2***>

3/ Build a.i chatbox by using Tensorflow <3@,2***>


3*** basic instruction to buil CHAT BOX GPT with OPEN A.I

1/ step-by-step plan to create a chatbot (based on the tutorial code) <1@,3***>

2/ Step 1: Set up the OpenAI API credentials <2@,3***>

3/ Step 2: Create a new chatbot <3@,3***>

4/ Step 3: Prepare training prompts and completions <4@,3***>

5/ Step 4: Train the chatbot <5@,3***>

6/ Step 5: Test the chatbot <6@,3***>

7/ Step 6: Perform actions or provide information <7@,3***>

8/ Step 7: Iterate and refine <8@,3***>

